Name
glDrawBuffer, glNamedFramebufferDrawBuffer — specify which color buffers are to be drawn into

C Specification
void glDrawBuffer(	GLenum buf);
 
void glNamedFramebufferDrawBuffer(	GLuint framebuffer,
 	GLenum buf);
 
Parameters
framebuffer
Specifies the name of the framebuffer object for glNamedFramebufferDrawBuffer function. Must be zero or the name of a framebuffer object.

buf
For default framebuffer, the argument specifies up to four color buffers to be drawn into. Symbolic constants GL_NONE, GL_FRONT_LEFT, GL_FRONT_RIGHT, GL_BACK_LEFT, GL_BACK_RIGHT, GL_FRONT, GL_BACK, GL_LEFT, GL_RIGHT, and GL_FRONT_AND_BACK are accepted. The initial value is GL_FRONT for single-buffered contexts, and GL_BACK for double-buffered contexts. For framebuffer objects, GL_COLOR_ATTACHMENT$m$ and GL_NONE enums are accepted, where $m$ is a value between 0 and GL_MAX_COLOR_ATTACHMENTS.

Description
When colors are written to the frame buffer, they are written into the color buffers specified by glDrawBuffer. One of the following values can be used for default framebuffer:

GL_NONE
No color buffers are written.

GL_FRONT_LEFT
Only the front left color buffer is written.

GL_FRONT_RIGHT
Only the front right color buffer is written.

GL_BACK_LEFT
Only the back left color buffer is written.

GL_BACK_RIGHT
Only the back right color buffer is written.

GL_FRONT
Only the front left and front right color buffers are written. If there is no front right color buffer, only the front left color buffer is written.

GL_BACK
Only the back left and back right color buffers are written. If there is no back right color buffer, only the back left color buffer is written.

GL_LEFT
Only the front left and back left color buffers are written. If there is no back left color buffer, only the front left color buffer is written.

GL_RIGHT
Only the front right and back right color buffers are written. If there is no back right color buffer, only the front right color buffer is written.

GL_FRONT_AND_BACK
All the front and back color buffers (front left, front right, back left, back right) are written. If there are no back color buffers, only the front left and front right color buffers are written. If there are no right color buffers, only the front left and back left color buffers are written. If there are no right or back color buffers, only the front left color buffer is written.

If more than one color buffer is selected for drawing, then blending or logical operations are computed and applied independently for each color buffer and can produce different results in each buffer.

Monoscopic contexts include only left buffers, and stereoscopic contexts include both left and right buffers. Likewise, single-buffered contexts include only front buffers, and double-buffered contexts include both front and back buffers. The context is selected at GL initialization.

For framebuffer objects, GL_COLOR_ATTACHMENT$m$ and GL_NONE enums are accepted, where $m$ is a value between 0 and GL_MAX_COLOR_ATTACHMENTS. glDrawBuffer will set the draw buffer for fragment colors other than zero to GL_NONE.

Errors
GL_INVALID_OPERATION error is generated by glNamedFramebufferDrawBuffer if framebuffer is not zero or the name of an existing framebuffer object.

GL_INVALID_ENUM is generated if buf is not an accepted value.

GL_INVALID_OPERATION is generated if the default framebuffer is affected and none of the buffers indicated by buf exists.

GL_INVALID_OPERATION is generated if a framebuffer object is affected and buf is not equal to GL_NONE or GL_COLOR_ATTACHMENT$m$, where $m$ is a value between 0 and GL_MAX_COLOR_ATTACHMENTS.

Associated Gets
glGet with argument GL_DRAW_BUFFER

Version Support
OpenGL Version
Function / Feature Name	2.0	2.1	3.0	3.1	3.2	3.3	4.0	4.1	4.2	4.3	4.4	4.5
glDrawBuffer	✔	✔	✔	✔	✔	✔	✔	✔	✔	✔	✔	✔
glNamedFramebufferDrawBuffer	-	-	-	-	-	-	-	-	-	-	-	✔
See Also
glBlendFunc, glColorMask, glDrawBuffers, glLogicOp, glReadBuffer

Copyright
Copyright © 1991-2006 Silicon Graphics, Inc. Copyright © 2010-2014 Khronos Group. This document is licensed under the SGI Free Software B License. For details, see https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt.